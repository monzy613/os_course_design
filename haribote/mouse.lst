     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 	EXTERN	_fifo32_put
     9 00000000                                 	EXTERN	_last_key
    10 00000000                                 	EXTERN	_wait_KBC_sendready
    11 00000000                                 [FILE "mouse.c"]
    12                                          [SECTION .data]
    13 00000000                                 _last_key:
    14 00000000 34                              	DB	52
    15                                          [SECTION .text]
    16 00000000                                 	GLOBAL	_inthandler2c
    17 00000000                                 _inthandler2c:
    18 00000000 55                              	PUSH	EBP
    19 00000001 89 E5                           	MOV	EBP,ESP
    20 00000003 6A 64                           	PUSH	100
    21 00000005 68 000000A0                     	PUSH	160
    22 0000000A E8 [00000000]                   	CALL	_io_out8
    23 0000000F 6A 62                           	PUSH	98
    24 00000011 6A 20                           	PUSH	32
    25 00000013 E8 [00000000]                   	CALL	_io_out8
    26 00000018 6A 60                           	PUSH	96
    27 0000001A E8 [00000000]                   	CALL	_io_in8
    28 0000001F 03 05 [00000008]                	ADD	EAX,DWORD [_mousedata0]
    29 00000025 50                              	PUSH	EAX
    30 00000026 FF 35 [00000004]                	PUSH	DWORD [_mousefifo]
    31 0000002C E8 [00000000]                   	CALL	_fifo32_put
    32 00000031 C6 05 [00000000] C8             	MOV	BYTE [_last_key],-56
    33 00000038 C9                              	LEAVE
    34 00000039 C3                              	RET
    35 0000003A                                 	GLOBAL	_enable_mouse
    36 0000003A                                 _enable_mouse:
    37 0000003A 55                              	PUSH	EBP
    38 0000003B 89 E5                           	MOV	EBP,ESP
    39 0000003D 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    40 00000040 A3 [00000004]                   	MOV	DWORD [_mousefifo],EAX
    41 00000045 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
    42 00000048 A3 [00000008]                   	MOV	DWORD [_mousedata0],EAX
    43 0000004D E8 [00000000]                   	CALL	_wait_KBC_sendready
    44 00000052 68 000000D4                     	PUSH	212
    45 00000057 6A 64                           	PUSH	100
    46 00000059 E8 [00000000]                   	CALL	_io_out8
    47 0000005E E8 [00000000]                   	CALL	_wait_KBC_sendready
    48 00000063 68 000000F4                     	PUSH	244
    49 00000068 6A 60                           	PUSH	96
    50 0000006A E8 [00000000]                   	CALL	_io_out8
    51 0000006F 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
    52 00000072 C6 40 03 00                     	MOV	BYTE [3+EAX],0
    53 00000076 C9                              	LEAVE
    54 00000077 C3                              	RET
    55 00000078                                 	GLOBAL	_mouse_decode
    56 00000078                                 _mouse_decode:
    57 00000078 55                              	PUSH	EBP
    58 00000079 89 E5                           	MOV	EBP,ESP
    59 0000007B 56                              	PUSH	ESI
    60 0000007C 53                              	PUSH	EBX
    61 0000007D 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    62 00000080 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    63 00000083 89 CE                           	MOV	ESI,ECX
    64 00000085 8A 42 03                        	MOV	AL,BYTE [3+EDX]
    65 00000088 84 C0                           	TEST	AL,AL
    66 0000008A 75 11                           	JNE	L4
    67 0000008C 80 F9 FA                        	CMP	CL,-6
    68 0000008F 74 06                           	JE	L13
    69 00000091                                 L12:
    70 00000091 31 C0                           	XOR	EAX,EAX
    71 00000093                                 L3:
    72 00000093 5B                              	POP	EBX
    73 00000094 5E                              	POP	ESI
    74 00000095 5D                              	POP	EBP
    75 00000096 C3                              	RET
    76 00000097                                 L13:
    77 00000097 C6 42 03 01                     	MOV	BYTE [3+EDX],1
    78 0000009B EB F4                           	JMP	L12
    79 0000009D                                 L4:
    80 0000009D 3C 01                           	CMP	AL,1
    81 0000009F 74 61                           	JE	L14
    82 000000A1 3C 02                           	CMP	AL,2
    83 000000A3 74 54                           	JE	L15
    84 000000A5 3C 03                           	CMP	AL,3
    85 000000A7 74 05                           	JE	L16
    86 000000A9 83 C8 FF                        	OR	EAX,-1
    87 000000AC EB E5                           	JMP	L3
    88 000000AE                                 L16:
    89 000000AE 8A 1A                           	MOV	BL,BYTE [EDX]
    90 000000B0 81 E6 000000FF                  	AND	ESI,255
    91 000000B6 89 D8                           	MOV	EAX,EBX
    92 000000B8 88 4A 02                        	MOV	BYTE [2+EDX],CL
    93 000000BB 83 E0 07                        	AND	EAX,7
    94 000000BE 89 72 08                        	MOV	DWORD [8+EDX],ESI
    95 000000C1 89 42 0C                        	MOV	DWORD [12+EDX],EAX
    96 000000C4 88 D8                           	MOV	AL,BL
    97 000000C6 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
    98 000000CA 83 E0 10                        	AND	EAX,16
    99 000000CD 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   100 000000D0 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   101 000000D4 84 C0                           	TEST	AL,AL
   102 000000D6 74 09                           	JE	L10
   103 000000D8 81 C9 FFFFFF00                  	OR	ECX,-256
   104 000000DE 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   105 000000E1                                 L10:
   106 000000E1 83 E3 20                        	AND	EBX,32
   107 000000E4 84 DB                           	TEST	BL,BL
   108 000000E6 74 07                           	JE	L11
   109 000000E8 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   110 000000EF                                 L11:
   111 000000EF F7 5A 08                        	NEG	DWORD [8+EDX]
   112 000000F2 B8 00000001                     	MOV	EAX,1
   113 000000F7 EB 9A                           	JMP	L3
   114 000000F9                                 L15:
   115 000000F9 88 4A 01                        	MOV	BYTE [1+EDX],CL
   116 000000FC C6 42 03 03                     	MOV	BYTE [3+EDX],3
   117 00000100 EB 8F                           	JMP	L12
   118 00000102                                 L14:
   119 00000102 83 E6 C8                        	AND	ESI,-56
   120 00000105 89 F0                           	MOV	EAX,ESI
   121 00000107 3C 08                           	CMP	AL,8
   122 00000109 75 86                           	JNE	L12
   123 0000010B 88 0A                           	MOV	BYTE [EDX],CL
   124 0000010D C6 42 03 02                     	MOV	BYTE [3+EDX],2
   125 00000111 E9 FFFFFF7B                     	JMP	L12
   126 00000116                                 	GLOBAL	_mousefifo
   127                                          [SECTION .data]
   128 00000001 00 00 00                        	ALIGNB	4
   129 00000004                                 _mousefifo:
   130 00000004 00 00 00 00                     	RESB	4
   131 00000008                                 	GLOBAL	_mousedata0
   132                                          [SECTION .data]
   133 00000008                                 	ALIGNB	4
   134 00000008                                 _mousedata0:
   135 00000008 00 00 00 00                     	RESB	4
